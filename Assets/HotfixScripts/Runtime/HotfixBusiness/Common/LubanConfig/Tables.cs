//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;



namespace GameConfig
{ 
public partial class Tables
{
    public Cfg.TbPlayerLevelUp TbPlayerLevelUp {get; }
    public Cfg.TbPlayerBaseProperty TbPlayerBaseProperty {get; }
    public Cfg.TbItem TbItem {get; }
    public Cfg.TbItemType TbItemType {get; }
    public Cfg.TbItemQuality TbItemQuality {get; }
    public Cfg.TbTask TbTask {get; }
    public Cfg.TbTreasureChest TbTreasureChest {get; }

    public Tables(System.Func<string, ByteBuf> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        TbPlayerLevelUp = new Cfg.TbPlayerLevelUp(loader("cfg_tbplayerlevelup")); 
        tables.Add("Cfg.TbPlayerLevelUp", TbPlayerLevelUp);
        TbPlayerBaseProperty = new Cfg.TbPlayerBaseProperty(loader("cfg_tbplayerbaseproperty")); 
        tables.Add("Cfg.TbPlayerBaseProperty", TbPlayerBaseProperty);
        TbItem = new Cfg.TbItem(loader("cfg_tbitem")); 
        tables.Add("Cfg.TbItem", TbItem);
        TbItemType = new Cfg.TbItemType(loader("cfg_tbitemtype")); 
        tables.Add("Cfg.TbItemType", TbItemType);
        TbItemQuality = new Cfg.TbItemQuality(loader("cfg_tbitemquality")); 
        tables.Add("Cfg.TbItemQuality", TbItemQuality);
        TbTask = new Cfg.TbTask(loader("cfg_tbtask")); 
        tables.Add("Cfg.TbTask", TbTask);
        TbTreasureChest = new Cfg.TbTreasureChest(loader("cfg_tbtreasurechest")); 
        tables.Add("Cfg.TbTreasureChest", TbTreasureChest);

        PostInit();
        TbPlayerLevelUp.Resolve(tables); 
        TbPlayerBaseProperty.Resolve(tables); 
        TbItem.Resolve(tables); 
        TbItemType.Resolve(tables); 
        TbItemQuality.Resolve(tables); 
        TbTask.Resolve(tables); 
        TbTreasureChest.Resolve(tables); 
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        TbPlayerLevelUp.TranslateText(translator); 
        TbPlayerBaseProperty.TranslateText(translator); 
        TbItem.TranslateText(translator); 
        TbItemType.TranslateText(translator); 
        TbItemQuality.TranslateText(translator); 
        TbTask.TranslateText(translator); 
        TbTreasureChest.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}