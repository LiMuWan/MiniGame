//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using Cysharp.Threading.Tasks;


namespace cfg
{
   
public sealed class Tables
{
    public TbUIData_GameMode TbUIData_GameMode {get; private set; }
    public TbUIData_Race TbUIData_Race {get; private set; }
    public TbUIData_Character TbUIData_Character {get; private set; }
    public TbPlayerData_Character TbPlayerData_Character {get; private set; }
    public TbEntityData TbEntityData {get; private set; }
    public TbLevelData TbLevelData {get; private set; }

    public Tables() { }
    
    public async UniTask LoadAsync(System.Func<string, UniTask<ByteBuf>> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        TbUIData_GameMode = new TbUIData_GameMode(await loader("tbuidata_gamemode")); 
        tables.Add("TbUIData_GameMode", TbUIData_GameMode);
        TbUIData_Race = new TbUIData_Race(await loader("tbuidata_race")); 
        tables.Add("TbUIData_Race", TbUIData_Race);
        TbUIData_Character = new TbUIData_Character(await loader("tbuidata_character")); 
        tables.Add("TbUIData_Character", TbUIData_Character);
        TbPlayerData_Character = new TbPlayerData_Character(await loader("tbplayerdata_character")); 
        tables.Add("TbPlayerData_Character", TbPlayerData_Character);
        TbEntityData = new TbEntityData(await loader("tbentitydata")); 
        tables.Add("TbEntityData", TbEntityData);
        TbLevelData = new TbLevelData(await loader("tbleveldata")); 
        tables.Add("TbLevelData", TbLevelData);

        TbUIData_GameMode.Resolve(tables); 
        TbUIData_Race.Resolve(tables); 
        TbUIData_Character.Resolve(tables); 
        TbPlayerData_Character.Resolve(tables); 
        TbEntityData.Resolve(tables); 
        TbLevelData.Resolve(tables); 
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        TbUIData_GameMode.TranslateText(translator); 
        TbUIData_Race.TranslateText(translator); 
        TbUIData_Character.TranslateText(translator); 
        TbPlayerData_Character.TranslateText(translator); 
        TbEntityData.TranslateText(translator); 
        TbLevelData.TranslateText(translator); 
    }
}

}