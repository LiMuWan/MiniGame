//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;



namespace GameConfig
{ 
public partial class Tables
{
    public Cfg.PlayerLevelUp PlayerLevelUp {get; }
    public Cfg.ItemBaseProperty ItemBaseProperty {get; }
    public Cfg.Item Item {get; }
    public Cfg.ItemType ItemType {get; }
    public Cfg.ItemQuality ItemQuality {get; }
    public Cfg.Task Task {get; }
    public Cfg.TreasureChest TreasureChest {get; }

    public Tables(System.Func<string, ByteBuf> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        PlayerLevelUp = new Cfg.PlayerLevelUp(loader("cfg_playerlevelup")); 
        tables.Add("Cfg.PlayerLevelUp", PlayerLevelUp);
        ItemBaseProperty = new Cfg.ItemBaseProperty(loader("cfg_itembaseproperty")); 
        tables.Add("Cfg.ItemBaseProperty", ItemBaseProperty);
        Item = new Cfg.Item(loader("cfg_item")); 
        tables.Add("Cfg.Item", Item);
        ItemType = new Cfg.ItemType(loader("cfg_itemtype")); 
        tables.Add("Cfg.ItemType", ItemType);
        ItemQuality = new Cfg.ItemQuality(loader("cfg_itemquality")); 
        tables.Add("Cfg.ItemQuality", ItemQuality);
        Task = new Cfg.Task(loader("cfg_task")); 
        tables.Add("Cfg.Task", Task);
        TreasureChest = new Cfg.TreasureChest(loader("cfg_treasurechest")); 
        tables.Add("Cfg.TreasureChest", TreasureChest);

        PostInit();
        PlayerLevelUp.Resolve(tables); 
        ItemBaseProperty.Resolve(tables); 
        Item.Resolve(tables); 
        ItemType.Resolve(tables); 
        ItemQuality.Resolve(tables); 
        Task.Resolve(tables); 
        TreasureChest.Resolve(tables); 
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        PlayerLevelUp.TranslateText(translator); 
        ItemBaseProperty.TranslateText(translator); 
        Item.TranslateText(translator); 
        ItemType.TranslateText(translator); 
        ItemQuality.TranslateText(translator); 
        Task.TranslateText(translator); 
        TreasureChest.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}